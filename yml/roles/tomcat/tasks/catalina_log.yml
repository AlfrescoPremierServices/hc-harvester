---
- name: Get Tomcat log directory config
  shell: grep -E '^[0-9]catalina\.org\.apache\.juli\.(Async)?FileHandler\.directory' {{ outer_loop | regex_replace('.*\ -Djava\.util\.logging\.config\.file=(.*?)(\s+\-.*|\s?(org\.apache\.catalina\.startup\.Bootstrap\ start)?$)' ,'\1') }}            
  become: "{{ 'true' if checked_privs.failed == false else 'false' }}"
  become_user: "{{ tomcat_user }}"
  register: catalina_log_dir_cfg

- name: Get Tomcat log file prefix config
  shell: grep -E '^[0-9]catalina\.org\.apache\.juli\.(Async)?FileHandler\.prefix' {{ outer_loop | regex_replace('.*\ -Djava\.util\.logging\.config\.file=(.*?)(\s+\-.*|\s?(org\.apache\.catalina\.startup\.Bootstrap\ start)?$)' ,'\1') }}               
  become: "{{ 'true' if checked_privs.failed == false else 'false' }}"
  become_user: "{{ tomcat_user }}"
  register: catalina_log_prefix_cfg

- name: Get Tomcat log path components
  include_vars: tomcat_log.yml

- name: Find Tomcat log files
  find:
    paths:
      - "{{ catalina_log_dir }}"
      - "{{ tomcat_out.stat.lnk_target | dirname if tomcat_out.skipped | default(false) == false else catalina_base + '/logs' }}"
      - "{{ tomcat_err.stat.lnk_target | dirname if tomcat_err.skipped | default(false) == false else catalina_base + '/logs' }}"
    patterns:
      - "{{ catalina_log_prefix }}*"
      - "{{ tomcat_out.stat.lnk_target | basename if tomcat_out.skipped | default(false) == false else 'catalina.out' }}"
      - "{{ tomcat_err.stat.lnk_target | basename if tomcat_err.skipped | default(false) == false else 'catalina.out' }}"
    age: "{{ log_history }}"
  become: "{{ 'true' if checked_privs.failed == false else 'false' }}"
  become_user: "{{ tomcat_user }}"
  register: found_catalina_logs

- name: Build catalina dict
  set_fact:
    catalina_dict: [ { user: "{{ tomcat_user }}", logfiles: "{{ found_catalina_logs.files | map(attribute='path') | list | unique }}", archive: "{{ hc_tmp }}/{{ webapp_server_product }}-{{ tomcat_pid }}.log.zip" } ]
  when: found_catalina_logs.matched > 0

- name: Add catalina log files to the list of assets to archive
  set_fact:
    to_archive: "{{ to_archive }} + {{ catalina_dict }}"
  when: found_catalina_logs.matched > 0

