---
- name: Set Search Service variables - Solr6
  include_vars: solr6_args.yml

- name: Set Search Service facts - Solr6
  set_fact:
    solr_context: solr
    solr_user: "{{ jetty_user }}"
    solr_home: "{{ solr_home | default(jetty_solr_home[0]) }}"
    solr_scheme: "{{ jetty_scheme[0] }}"
    solr_port: "{{ jetty_ssl_port[0] | default(jetty_port[0]) if jetty_scheme == 'https' else jetty_port[0] }}"
    #solr_log_dir: "{{ jetty_home[0] }}/{{ solr_log_dir[0] }}"
    solr_log_dir: "{{ solr_log_dir[0] }}"

- name: Check Search Service Privileges - Solr6
  command: /bin/true
  become: yes
  become_user: "{{ solr_user }}"
  register: checked_solr6_privs
  ignore_errors: yes

- name: Get Search Service working dir - Solr6                                                                                                                                                 [80/4910]
  stat:
    path: /proc/{{ jetty_pid }}/cwd
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: solr_cwd
  become: yes
  become_user: "{{ solr_user }}"
  when: checked_solr6_privs.failed == false

- name:  Get Search Service process file limits - Solr6
  command: cat /proc/{{ jetty_pid }}/limits
  register: solr_proc_limits 

- name: Get Search Service process command line - Solr6
  shell: cat -v /proc/{{ jetty_pid }}/cmdline | sed 's/\^@/\n /g'
  register: solr_proc_cmdline

- name: Get Search Service process Environment - Solr6
  shell: cat -v /proc/{{ jetty_pid }}/environ | sed 's/\^@/\n/g'
  register: solr_proc_environ
  become: yes
  become_user: "{{ solr_user }}"
  when: checked_solr6_privs.failed == false

- name: Get Search Service process status - Solr6
  command: cat /proc/{{ jetty_pid }}/status
  register: solr_proc_status

- name: Save Search Service process details - Solr6
  connection: local
  template:
    dest: ../assets/{{ inventory_hostname }}/solr6-{{ jetty_pid }}.proc
    src: proc_detail
    newline_sequence: \r\n

- name: Find Search Service log files - Solr6
  find:
    paths: "{{ hostvars[inventory_hostname]['solr_log_dir'] }}"
    patterns:
      - solr.log*
      - "{{ gc_log_pattern | basename }}*"
    age: "{{ log_history }}"
  become: "{{ 'yes' if checked_solr6_privs.failed == false else 'no' }}"
  become_user: "{{ solr_user }}"
  register: found_solr_logs

- name: Archive Search Service log files - Solr6
  archive:
    path: "{{ found_solr_logs.files | map(attribute='path') | list }}"
    dest: "{{ hc_tmp }}/solr-log.zip"
    mode: 0644
    format: zip
  become: "{{ 'yes' if checked_solr6_privs.failed == false else 'no' }}"
  become_user: "{{ solr_user }}"
  when: found_solr_logs.matched > 0

- name: Fetch archived Search Service log files - Solr6
  fetch:
    src: "{{ hc_tmp }}/solr-log.zip"
    dest: ../assets/{{ inventory_hostname }}/logs/
    flat: yes
  when: found_solr_logs.matched > 0

- name: Archive Search Service config - Solr6
  archive:
    dest: "{{ hc_tmp }}/solr-cores-cfg.zip"
    path:
      - "{{ solr_home }}/conf/"
      - "{{ solr_home }}/alfresco/conf/"
      - "{{ solr_home }}/archive/conf/"
    mode: 0644
    format: zip
  become: "{{ 'yes' if checked_solr6_privs.failed == false else 'no' }}"
  become_user: "{{ solr_user }}"
  when: solr_home is defined

- name: Fetch archived Search Service config
  fetch:
    src: "{{ hc_tmp }}/solr-cores-cfg.zip"
    dest: ../assets/{{ inventory_hostname }}/conf/
    flat: yes
  when: solr_home is defined

- name: get Solr server info - Solr6
  uri:
    url: "{{ solr_scheme }}://localhost:{{ solr_port }}/{{ solr_context }}/admin/info/system?wt=json"
    headers: 
      X-Alfresco-Search-Secret: "{{ solr_secret_value }}"
    return_content: yes
    client_cert: "{{ hc_tmp }}/{{ solr_client_cert | default('solrclient_crt') }}"
    client_key: "{{ hc_tmp }}/{{ solr_client_key | default('solrclient_key') }}"
    validate_certs: no
    status_code:
      - 404
      - 200
  register: solr_info

- name: Generate Solr SUMMARY report - Solr6
  get_url:
    url: "{{ solr_scheme }}://localhost:{{ solr_port }}/{{ solr_context }}/admin/cores?action=SUMMARY&wt=xml"
    headers: 
      X-Alfresco-Search-Secret: "{{ solr_secret_value }}"
    dest: "{{ hc_tmp }}/solr-SUMMARY-{{ inventory_hostname }}.xml"
    client_cert: "{{ hc_tmp }}/{{ solr_client_cert | default('solrclient_crt') }}"
    client_key: "{{ hc_tmp }}/{{ solr_client_key | default('solrclient_key') }}"
    timeout: "{{ solr_summary_report_timeout }}"
    validate_certs: no

- name: Fetch Solr SUMMARY report - Solr 6
  fetch:
    src: "{{ hc_tmp }}/solr-SUMMARY-{{ inventory_hostname }}.xml"
    dest: ../assets/{{ inventory_hostname }}/
    flat: yes

- name: Generate Solr Path still to index - Solr6
  uri:
    url: "{{ solr_scheme }}://localhost:{{ solr_port }}/{{ solr_context }}/alfresco/select?fl=*,[cached]&indent=on&q={!term%20f=int@s_@cascade}1&sort=id%20desc&wt=json"
    headers: 
      X-Alfresco-Search-Secret: "{{ solr_secret_value }}"
    dest: "{{ hc_tmp }}/solr-PATH-STILL-TO-INDEX-{{ inventory_hostname }}.json"
    client_cert: "{{ hc_tmp }}/{{ solr_client_cert | default('solrclient_crt') }}"
    client_key: "{{ hc_tmp }}/{{ solr_client_key | default('solrclient_key') }}"
    timeout: "{{ solr_summary_report_timeout }}"
    validate_certs: no
    status_code:
      - 400
      - 200

- name: Fetch Solr Path still to index - Solr6
  fetch:
    src: "{{ hc_tmp }}/solr-PATH-STILL-TO-INDEX-{{ inventory_hostname }}.json"
    dest: ../assets/{{ inventory_hostname }}/
    flat: yes

- name: Generate Solr still to index Content - Solr6
  uri:
    url: "{{ solr_scheme }}://localhost:{{ solr_port }}/{{ solr_context }}/alfresco/select?q=*&fl=[cached]LATEST_APPLIED_CONTENT_VERSION_ID,LAST_INCOMING_CONTENT_VERSION_ID&fq={!frange%20l=1%20u=1%20v=$equals}&equals=if(not(eq(LATEST_APPLIED_CONTENT_VERSION_ID,LAST_INCOMING_CONTENT_VERSION_ID)),1,0)&indent=on%20&wt=json"
    headers: 
      X-Alfresco-Search-Secret: "{{ solr_secret_value }}"
    dest: "{{ hc_tmp }}/solr-FTS-STILL-TO-INDEX-{{ inventory_hostname }}.json"
    client_cert: "{{ hc_tmp }}/{{ solr_client_cert | default('solrclient_crt') }}"
    client_key: "{{ hc_tmp }}/{{ solr_client_key | default('solrclient_key') }}"
    timeout: "{{ solr_summary_report_timeout }}"
    validate_certs: no
    status_code:
      - 400
      - 200

- name: Fetch Solr still to index Content - Solr6
  fetch:
    src: "{{ hc_tmp }}/solr-FTS-STILL-TO-INDEX-{{ inventory_hostname }}.json"
    dest: ../assets/{{ inventory_hostname }}/
    flat: yes    