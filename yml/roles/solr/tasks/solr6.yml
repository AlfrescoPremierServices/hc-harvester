---
- name: Set Search Service variables
  include_vars: solr6_args.yml

- name: Set Search Service facts
  set_fact:
    solr_context: solr
    solr_user: "{{ jetty_user }}"
    solr_home: "{{ solr_home | default(jetty_solr_home[0]) }}"
    solr_scheme: "{{ jetty_scheme[0] }}"
    solr_port: "{{ jetty_ssl_port[0] | default(jetty_port[0]) if jetty_scheme == 'https' else jetty_port[0] }}"
    #solr_log_dir: "{{ jetty_home[0] }}/{{ solr_log_dir[0] }}"
    solr_log_dir: "{{ solr_log_dir[0] }}"

- name: Debug - Search Services facts
  ansible.builtin.debug:
    msg: 
    - solr_context is {{ solr_context }}
    - solr_user is {{ solr_user }}
    - solr_home is {{ solr_home }}
    - solr_scheme is {{ solr_scheme }}
    - solr_port is {{ solr_port }}
    - solr_log_dir is {{ solr_log_dir }}
  when: activate_debug == true 

- name: Check Search Service Privileges
  command: /bin/true
  become: true
  become_user: "{{ solr_user }}"
  register: checked_solr6_privs
  ignore_errors: true

- name: Get Search Service working dir                                                                                                                                                        [80/4910]
  stat:
    path: /proc/{{ jetty_pid }}/cwd
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: solr_cwd
  become: true
  become_user: "{{ solr_user }}"
  when: checked_solr6_privs.failed == false

- name:  Get Search Service process file limits
  command: cat /proc/{{ jetty_pid }}/limits
  register: solr_proc_limits 

- name: Get Search Service process command line
  shell: cat -v /proc/{{ jetty_pid }}/cmdline | sed 's/\^@/\n /g'
  register: solr_proc_cmdline

- name: Get Search Service process Environment
  shell: cat -v /proc/{{ jetty_pid }}/environ | sed 's/\^@/\n/g'
  register: solr_proc_environ
  become: true
  become_user: "{{ solr_user }}"
  when: checked_solr6_privs.failed == false

- name: Get Search Service process status
  command: cat /proc/{{ jetty_pid }}/status
  register: solr_proc_status

- name: Set Solr Secret variables
  shell: >
    cat -v /proc/{{ jetty_pid }}/environ | 
    sed 's/\^@/\n/g' | 
    grep alfresco.secureComms.secret | 
    awk -e '/-Dalfresco.secureComms.secret=([^-D]*)/ {print $1}' | 
    awk -F= '{print $3}'
  register: solr_secret_value_env
  become: true
  become_user: "{{ solr_user }}"

- name: Set Solr Secret facts
  set_fact:
    solr_secret_value: "{{ solr_secret_value_env.stdout_lines[0] }}"

- name: Debug - Set Solr Secret variables
  ansible.builtin.debug:
    msg: 
    - solr_secret_value is {{ solr_secret_value }}
  when: activate_debug == true 

- name: Save Search Service process details
  connection: local
  template:
    dest: ../assets/{{ inventory_hostname }}/solr6-{{ jetty_pid }}.proc
    src: proc_detail
    newline_sequence: \r\n

- name: Find Search Service log files
  find:
    paths: "{{ hostvars[inventory_hostname]['solr_log_dir'] }}"
    patterns:
      - solr.log*
      - "{{ gc_log_pattern | basename }}*"
    age: "{{ log_history }}"
  become: "{{ 'true' if checked_solr6_privs.failed == false else 'false' }}"
  become_user: "{{ solr_user }}"
  register: found_solr_logs

- name: Debug - Find Search Service log files
  ansible.builtin.debug:
    msg: 
    - found_solr_logs is {{ found_solr_logs }}
  when: activate_debug == true 

- name: Archive Search Service log files
  archive:
    path: "{{ found_solr_logs.files | map(attribute='path') | list }}"
    dest: "{{ hc_tmp }}/solr-log.zip"
    mode: 0644
    format: zip
  become: "{{ 'true' if checked_solr6_privs.failed == false else 'false' }}"
  become_user: "{{ solr_user }}"
  when: found_solr_logs.matched > 0

- name: Fetch archived Search Service log files
  fetch:
    src: "{{ hc_tmp }}/solr-log.zip"
    dest: ../assets/{{ inventory_hostname }}/logs/
    flat: yes
  when: found_solr_logs.matched > 0

- name: Archive Search Service config
  archive:
    dest: "{{ hc_tmp }}/solr-cores-cfg.zip"
    path:
      - "{{ solr_home }}/conf/"
      - "{{ solr_home }}/alfresco/conf/"
      - "{{ solr_home }}/archive/conf/"
    mode: 0644
    format: zip
  become: "{{ 'true' if checked_solr6_privs.failed == false else 'false' }}"
  become_user: "{{ solr_user }}"
  when: solr_home is defined

- name: Fetch archived Search Service config
  fetch:
    src: "{{ hc_tmp }}/solr-cores-cfg.zip"
    dest: ../assets/{{ inventory_hostname }}/conf/
    flat: yes
  when: solr_home is defined

