---
- name: Create temp dir
  file:
    state: directory
    path: "{{ hc_tmp }}"

- name: Install oracle driver
  command: mvn install:install-file -Dfile={{inventory_dir}}/alfresco-db-queries/lib/ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.2.0.3 -Dpackaging=jar
  register: mvn_install_oracle

# Compile only on the control node
- name: Compile Alfresco DB Queries tool
  local_action: command mvn -f {{inventory_dir}}/alfresco-db-queries/ clean compile install
  register: mvn_result

- name: Send Alfresco DB queries tool
  copy:
    src: "{{lookup('first_found', jarloc)}}"
    dest: "{{ hc_tmp }}"

- name: Send config and scripts files
  template:
    src: "{{ item.file }}"
    dest: "{{ hc_tmp }}"
    mode: "{{ item.mode }}"
  with_items:
    - { file: application.properties, mode: '644' }
    - { file: alfresco-db-queries.sh, mode: '755' }

- name: Run the DB queries tool
  command: ./alfresco-db-queries.sh chdir={{ hc_tmp }}
  async: 900
  become: "{{ 'true' if checked_privs.failed == false else 'false' }}"
  become_user: "{{ alfresco_user }}"
  register: alfdbq_run
  notify: Destroy DB queries tool process

- name: Wait for Alfresco-db-queries to be available on port {{ alfresco_db_queries_port }}
  wait_for:
    delay: 5
    sleep: 3
    connect_timeout: 3
    port: "{{ alfresco_db_queries_port }}"

- name: Generate DB queries report
  uri:
    url: http://localhost:{{ alfresco_db_queries_port }}/report
    timeout: "{{ db_queries_report_timeout }}"

- name: Zip Alfresco-db-queries files
  become: true
  archive:
    path: "{{ hc_tmp }}/acs-db-report*"
    dest: "{{ hc_tmp }}/alfresco-db-reports.zip"
    format: zip

- name: Fetch DB queries report
  fetch:
    src: "{{ hc_tmp }}/alfresco-db-reports.zip"
    dest: ../assets/
    flat: yes
